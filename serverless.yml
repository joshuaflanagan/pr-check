service: pr-check
plugins:
  - serverless-ruby-package
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: ruby2.5
  stage: ${opt:stage, "development"}
  profile: se-dev

  stackTags:
    Env: ${self:provider.stage}
    App: ${self:service}

  environment:
    TABLE: ${self:service}-${self:provider.stage}
    MENTIONS_TTL: 2592000 # 30 days
    SLACK_TOKEN: ${env:SLACK_TOKEN}

  iamRoleStatements:
    # Give our lambda permission to write to our dynamodb table
    - Sid: DynamoReadWriteAccess
      Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:PutItem
      Resource:
         "Fn::GetAtt": [ PRCheckTable, Arn ]
    # Give our lambda permission to invoke any other lambda in this service
    - Sid: MarkInvocation
      Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource:
        arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-*

package:
  include:
    - handlers.rb
    - lib/**

functions:
  slack:
    handler: handlers.Handlers.slack_event_received
    events:
      - http: POST /slack
    environment:
      MARKPR_FUNCTION_NAME:
        Ref: MarkLambdaFunction
  github:
    handler: handlers.Handlers.github_event_received
    events:
      - http: POST /github
    environment:
      MARKPR_FUNCTION_NAME:
        Ref: MarkLambdaFunction
  mark:
    handler: handlers.Handlers.mark_pr_approved
    events:
      # This endpoint is only used to ease manual invocation
      - http: POST /mark_prs
    environment:
      MARK_REACTION: pr-approved
  # this is temporary, to get slack post mechanics working
  react:
    handler: handlers.Handlers.test_reaction
    events:
      - http: POST /reaction

resources:
  - Resources:
      #The DynamoDB table that stores the services data
      PRCheckTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: ${self:service}-${self:provider.stage}
          AttributeDefinitions:
            - AttributeName: part_key
              AttributeType: S
            - AttributeName: sort_key
              AttributeType: S
          KeySchema:
            - AttributeName: part_key
              KeyType: HASH
            - AttributeName: sort_key
              KeyType: RANGE
          BillingMode: PAY_PER_REQUEST
          TimeToLiveSpecification:
            AttributeName: expires_at
            Enabled: true
