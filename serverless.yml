service: pr-check
plugins:
  - serverless-ruby-package

provider:
  name: aws
  runtime: ruby2.5
  stage: ${opt:stage, "development"}
  profile: se-dev

  stackTags:
    Env: ${self:provider.stage}
    App: ${self:service}

  environment:
    MENTIONS_TABLE_NAME: ${self:service}-${self:provider.stage}-PullRequestMentions
    MENTIONS_TTL: 2592000 # 30 days
    SLACK_TOKEN: ${env:SLACK_TOKEN}

  iamRoleStatements:
    # Give our lambda permission to store events in the dynamo db table for
    # this service and stage
    - Sid: MentionsWriteAccess
      Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
         "Fn::GetAtt": [ PullRequestMentionsTable, Arn ]
        #- "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:service}-${self:provider.stage}-events"

package:
  include:
    - handlers.rb
    - lib/**

functions:
  slack:
    handler: handlers.Handlers.slack_event_received
    events:
      - http: POST /slack
  github:
    handler: handlers.Handlers.github_event_received
    events:
      - http: POST /github
  # this is temporary, to get slack post mechanics working
  react:
    handler: handlers.Handlers.test_reaction
    events:
      - http: POST /reaction

resources:
  - Resources:
      PullRequestMentionsTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: ${self:service}-${self:provider.stage}-PullRequestMentions
          AttributeDefinitions:
            - AttributeName: pr_id
              AttributeType: S
            - AttributeName: mention_id
              AttributeType: S
          KeySchema:
            - AttributeName: pr_id
              KeyType: HASH
            - AttributeName: mention_id
              KeyType: RANGE
          BillingMode: PAY_PER_REQUEST
          TimeToLiveSpecification:
            AttributeName: expires_at
            Enabled: true
